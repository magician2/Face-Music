{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar sleep = function sleep(ms) {\n  return _regeneratorRuntime.async(function sleep$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n            setTimeout(function () {\n              resolve();\n            }, ms);\n          }));\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default sleep;","map":{"version":3,"names":["sleep","ms","Promise","resolve","reject","setTimeout"],"sources":["/Users/comneder/Desktop/micp-master/Components/sleep.js"],"sourcesContent":["const sleep = async (ms) => {\n    return new Promise(function(resolve, reject) {\n        setTimeout(function() {\n            resolve();\n        }, ms);\n    });\n}\n\nexport default sleep;"],"mappings":";;AAAA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAAOC,EAAP;EAAA;IAAA;MAAA;QAAA;UAAA,iCACH,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;YACzCC,UAAU,CAAC,YAAW;cAClBF,OAAO;YACV,CAFS,EAEPF,EAFO,CAAV;UAGH,CAJM,CADG;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAd;;AAQA,eAAeD,KAAf"},"metadata":{},"sourceType":"module"}